name: Compiler Performance Benchmark

on:
  pull_request:
  workflow_dispatch:

jobs:
  performance-benchmark:
    runs-on: ubuntu-latest

    steps:
      # 1) Checkout only the DMD repo
      - name: Checkout PR branch (DMD only)
        uses: actions/checkout@v4
        with:
          path: pr
          fetch-depth: 0

      # 2) Bootstrap the PR compiler
      - name: Bootstrap DMD for PR
        working-directory: pr
        run: make -f posix.mak AUTO_BOOTSTRAP=1 -j$(nproc)  # uses prebuilt DMD to build itself :contentReference[oaicite:8]{index=8}

      # 3) Manually build Druntime against the new DMD
      - name: Build Druntime for PR
        working-directory: pr/druntime
        run: |
          make -f posix.mak -j$(nproc) \
            DMD="$GITHUB_WORKSPACE/pr/generated/linux/release/64/dmd"  # point to freshly built DMD :contentReference[oaicite:9]{index=9}

      # 4) Clone & build Phobos for PR
      - name: Clone Phobos for PR
        run: |
          git clone --depth=1 https://github.com/dlang/phobos.git pr/phobos  # get std library :contentReference[oaicite:10]{index=10}

      - name: Build Phobos for PR
        working-directory: pr/phobos
        run: |
          make -f posix.mak -j$(nproc) \
            DMD="$GITHUB_WORKSPACE/pr/generated/linux/release/64/dmd"  # builds Phobos + Druntime import :contentReference[oaicite:11]{index=11}

      # Repeat the same for the master branch
      - name: Checkout master branch
        uses: actions/checkout@v4
        with:
          ref: master
          path: master
          fetch-depth: 0

      - name: Bootstrap DMD for Master
        working-directory: master
        run: make -f posix.mak AUTO_BOOTSTRAP=1 -j$(nproc)

      - name: Build Druntime for Master
        working-directory: master/druntime
        run: |
          make -f posix.mak -j$(nproc) \
            DMD="$GITHUB_WORKSPACE/master/generated/linux/release/64/dmd"

      - name: Clone Phobos for Master
        run: |
          git clone --depth=1 https://github.com/dlang/phobos.git master/phobos

      - name: Build Phobos for Master
        working-directory: master/phobos
        run: |
          make -f posix.mak -j$(nproc) \
            DMD="$GITHUB_WORKSPACE/master/generated/linux/release/64/dmd"

      # 5) Export compiler paths
      - name: Export compiler paths
        run: |
          echo "PR_COMPILER=$GITHUB_WORKSPACE/pr/generated/linux/release/64/dmd" >> $GITHUB_ENV
          echo "MASTER_COMPILER=$GITHUB_WORKSPACE/master/generated/linux/release/64/dmd" >> $GITHUB_ENV

      # 6) Sanity-check your benchmark file exists
      - name: List benchmark files
        run: ls -R pr/compiler/test/benchmark

      - name: Run compilation benchmarks
        run: |
          # Prepare report
          echo "## System Configuration" > benchmark.md
          echo "- Cores: $(nproc)" >> benchmark.md
          echo "- CPU: $(lscpu | awk -F: '/Model name/ {print $2}' | xargs)" >> benchmark.md
          echo "- Memory: $(free -m | awk '/Mem:/ {print $2}') MB" >> benchmark.md
          echo "- Kernel: $(uname -r)" >> benchmark.md

          # Benchmark function
          benchmark() {
            local compiler=$1
            local prefix=$2
            local src="$3"

            echo -e "\n### $prefix Compiler" >> benchmark.md
            /usr/bin/time -v "$compiler" -O -release -inline -boundscheck=off \
              -of="$GITHUB_WORKSPACE/${prefix}-binary" "$src" \
              2>&1 | tee metrics-${prefix}.txt

            echo -e "\n**Metrics**:" >> benchmark.md
            grep -E 'Elapsed \(wall clock\)|Maximum resident set size' metrics-${prefix}.txt \
              | sed 's/.*://' \
              | xargs \
              >> benchmark.md

            echo "- Binary size: $(stat -c '%s' $GITHUB_WORKSPACE/${prefix}-binary) bytes" >> benchmark.md
          }

          # Run against the single test file
          FILE_PATH="pr/compiler/test/benchmark/binaryTree.d"
          benchmark "$PR_COMPILER" "PR"     "$GITHUB_WORKSPACE/$FILE_PATH"
          benchmark "$MASTER_COMPILER" "Master" "$GITHUB_WORKSPACE/$FILE_PATH"

      - name: Generate comparison report
        run: |
          pr_time=$(grep 'Elapsed (wall clock)' metrics-PR.txt | awk '{print $NF}')
          master_time=$(grep 'Elapsed (wall clock)' metrics-Master.txt | awk '{print $NF}')
          # … other metric-gathering …

          echo -e "\n## Performance Comparison" >> benchmark.md
          echo "| Metric                         | PR       | Master   | Difference |" >> benchmark.md
          echo "|--------------------------------|----------|----------|------------|" >> benchmark.md
          echo "| **Compilation Time (s)**       | $pr_time  | $master_time  | `$time_diff` |" >> benchmark.md
          echo "| **Memory Usage (KB)**          | $pr_mem   | $master_mem   | `$mem_diff`  |" >> benchmark.md
          echo "| **Binary Size (bytes)**        | $pr_size  | $master_size  | `$size_diff` |" >> benchmark.md

      - name: Upload benchmark report
        uses: actions/upload-artifact@v4
        with:
          name: performance-benchmark
          path: benchmark.md
